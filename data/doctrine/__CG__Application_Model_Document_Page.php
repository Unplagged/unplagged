<?php

namespace Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Application_Model_Document_Page extends \Application_Model_Document_Page implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getOriginalFile()
    {
        $this->__load();
        return parent::getOriginalFile();
    }

    public function setDocument(\Application_Model_Document $document)
    {
        $this->__load();
        return parent::setDocument($document);
    }

    public function getPageNumber()
    {
        $this->__load();
        return parent::getPageNumber();
    }

    public function getDocument()
    {
        $this->__load();
        return parent::getDocument();
    }

    public function setPageNumber($pageNumber)
    {
        $this->__load();
        return parent::setPageNumber($pageNumber);
    }

    public function getDirectName()
    {
        $this->__load();
        return parent::getDirectName();
    }

    public function getDirectLink()
    {
        $this->__load();
        return parent::getDirectLink();
    }

    public function getPlagiarismPercentage()
    {
        $this->__load();
        return parent::getPlagiarismPercentage();
    }

    public function getLines()
    {
        $this->__load();
        return parent::getLines();
    }

    public function addLine(\Application_Model_Document_Page_Line $line)
    {
        $this->__load();
        return parent::addLine($line);
    }

    public function removeLine(\Application_Model_Document_Page_Line $line)
    {
        $this->__load();
        return parent::removeLine($line);
    }

    public function removeLineByIndex($lineId)
    {
        $this->__load();
        return parent::removeLineByIndex($lineId);
    }

    public function getContent($returnType = 'list')
    {
        $this->__load();
        return parent::getContent($returnType);
    }

    public function setContent($content, $inputType = 'text')
    {
        $this->__load();
        return parent::setContent($content, $inputType);
    }

    public function logVersion()
    {
        $this->__load();
        return parent::logVersion();
    }

    public function persistVersions()
    {
        $this->__load();
        return parent::persistVersions();
    }

    public function getCurrentVersion()
    {
        $this->__load();
        return parent::getCurrentVersion();
    }

    public function setVersion($version)
    {
        $this->__load();
        return parent::setVersion($version);
    }

    public function getAuditLog()
    {
        $this->__load();
        return parent::getAuditLog();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function created()
    {
        $this->__load();
        return parent::created();
    }

    public function getIconClass()
    {
        $this->__load();
        return parent::getIconClass();
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function getRatings()
    {
        $this->__load();
        return parent::getRatings();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function isRatedByUser($user)
    {
        $this->__load();
        return parent::isRatedByUser($user);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'created', 'comments', 'ratings', 'notifications', 'version', 'auditLog', 'pageNumber', 'document', 'detectionReports', 'originalFile', 'lines');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}